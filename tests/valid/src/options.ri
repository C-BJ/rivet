struct Option {
    a: ?int32;
}

test "`nil` literal" {
    let x: ?int32 = nil;
    @assert(x is nil);
}

test "operator `??`" {
    let mut x: ?int32 = nil;
    @assert((x ?? 5) == 5);
    x = 1;
    @assert((x ?? 5) == 1);
}

test "operator `.?`" {
    let mut x: ?int32 = 5;
    @assert(x.? == 5);
}

test "guard expr with options" {
    let mut x: ?int32 = 100;
    if let y = x {
        @assert(y == 100);
    } else {
        @assert(false);
    }
}

test "options field" {
    let opt = Option();
    @assert(opt.a is nil);

    let opt2 = Option(a: 5);
    @assert(opt2.a !is nil);
    @assert(opt2.a.? == 5);
}
