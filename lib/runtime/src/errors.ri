// Copyright (C) 2022 The Rivet Developers. All rights reserved.
// Use of this source code is governed by an MIT license that can
// be found in the LICENSE file.

import "c/libc";
import "c";

public alias ErrnoError = c.ErrnoError;
public alias last_errno_error = c.last_errno_error;

#[inline]
func error_panic(err: Error) {
    process_panic(err.to_string());
}

public class Error : ToString {
    public msg: string;

    public func to_string(self) string {
        let type_name = "Error";
        if self.msg == "" {
            return type_name;
        }
        return "{}: {}".fmt(type_name, self.msg);
    }
}

public class InvalidArgumentError : Error { }

public class OutOfMemoryError : Error { }

public class RuneFromU32Error : Error { }
