// Copyright (C) 2022 The Rivet Team. All rights reserved.
// Use of this source code is governed by an MIT license
// that can be found in the LICENSE file.

using pkg::stdc;

pub mod env {
	/// User's home directory.
	pub static HOME_DIR: String = $if (_LINUX_) get("HOME") $else get("USERPROFILE");

	/// Returns `true` if the environment variable exists.
	pub fn exists(name: str) bool {
		return unsafe { stdc::getenv(name.ptr) } != none;
	}

	/// Returns the value of the environment variable named by the key.
	pub fn get(name: str) String {
		unsafe {
			let s = stdc::getenv(name.ptr);
			return if (s == none) "".to_string() else String::from_cstr(s);
		}
	}

	/// Sets the value of an environment variable with `name` to `value`.
	pub fn set(name: str, value: str, overwrite: bool = true) ! {
		if (unsafe { stdc::setenv(name.ptr, value.ptr, overwrite) == -1 }) {
			raise Error("env::set: {}", pkg::strerr());
		}
	}

	/// Removes an environment variable with `name`.
	pub fn remove(name: str) ! {
		if (unsafe { stdc::unsetenv(name.ptr) } == -1) {
			raise Error("env::remove: {}", pkg::strerr());
		}
	}
}
