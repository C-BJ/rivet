// Copyright (C) 2022 The Rivet Developers. All rights reserved.
// Use of this source code is governed by an MIT license that can
// be found in the LICENSE file.

#if _LINUX_
    public const RAND_MAX: i32 = 0x7fffffff;
#else_if _WINDOWS_
    public const RAND_MAX: i32 = 0x7fff;
#endif

extern (C) {
    public fn rand() i32;
    public fn srand(seed: u32);

    public fn atof(nptr: ?*u8) f64;
    public fn atoi(nptr: ?*u8) i32;
    public fn atol(nptr: ?*u8) i64;
    public fn atoll(nptr: ?*u8) i64;

    public fn strtod(nptr: [*]u8, endptr: ?*u8, base_: i32) f64;
    public fn strtof(nptr: [*]u8, endptr: ?*u8, base_: i32) f32;
    public fn strtol(nptr: [*]u8, endptr: ?*u8, base_: i32) i64;
    public fn strtoll(nptr: [*]u8, endptr: ?*u8, base_: i32) i64;
    public fn strtoul(nptr: [*]u8, endptr: ?*u8, base_: i32) u64;
    public fn strtoull(nptr: [*]u8, endptr: ?*u8, base_: i32) u64;

    public fn malloc(size: usize) ?mut_anyptr;
    public fn calloc(nobj: usize, size: usize) ?mut_anyptr;
    public fn realloc(p: ?mut_anyptr, size: usize) ?mut_anyptr;
    public fn free(p: anyptr);

    public fn getenv(name: *u8) ?*mut u8;
    public fn setenv(name: *u8, value: *u8, replace: bool) i32;
    public fn unsetenv(name: *u8) i32;

    public fn exit(status: i32) never;
    public fn abort() never;
}
