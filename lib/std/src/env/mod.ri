// Copyright (C) 2022 The Rivet Developers. All rights reserved.
// Use of this source code is governed by an MIT license that can
// be found in the LICENSE file.

import "c";
import "c/libc";

/// User's home directory.
pub let HOME_DIR: string =
#if _LINUX_
	get("HOME")
#else
	get("USERPROFILE")
#endif ?? "";

/// Returns `true` if the environment variable exists.
#[inline]
pub fn exists(name: string) bool {
	return if let _ = get(name) { true } else { false };
}

/// Returns the value of the environment variable named by the key.
#[inline]
pub fn get(name: string) ?string {
	return unsafe {
		if let s = libc.getenv(name.ptr) {
			string.from_raw(s)
		} else {
			nil
		}
	};
}

/// Sets the value of an environment variable with `name` to `value`.
pub fn set(name: string, value: string, overwrite: bool = true) ! {
	if unsafe { libc.setenv(name.ptr, value.ptr, overwrite) == -1 } {
		return c.last_errno_error();
	}
}

/// Removes an environment variable with `name`.
pub fn remove(name: string) ! {
	if unsafe { libc.unsetenv(name.ptr) } == -1 {
		return c.last_errno_error();
	}
}
