// Copyright (C) 2022 The Rivet Team. All rights reserved.
// Use of this source code is governed by an MIT license
// that can be found in the LICENSE file.

struct Result {
	pub output: String;
	pub exit_code: i32;
}

/// Starts the specified command, waits for it to complete, and returns
/// both its output and the exit code.
pub fn execute(cmd: str) Result {
    let pcmd = if (cmd.contains("2>")) cmd.to_string() else "{} 2>&1".fmt(cmd);

    unsafe {
        let f = stdc::popen(pcmd.as_ptr(), c"r");
        if (f == none) {
            return Result{
                output: "execute(\"{}\") failed".fmt(cmd),
                exit_code: -1
            };
        }

        let fd = stdc::fileno(f);
        let buf: [u8; 4096] = [];
        let pbuf: *mut u8 = &mut buf[0];
        let mut output = String::with_capacity(1024);

        while {
            let len = stdc::read(fd, pbuf, 4096);
            if (len == 0 or len == -1) {
                break;
            }
            output.push_raw_with_len(pbuf, as(usize, len));
        }

        return Result{
            output: output,
            exit_code: stdc::pclose(f)
        };
    }
}
