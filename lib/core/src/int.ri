// Copyright (C) 2022 The Rivet Team. All rights reserved.
// Use of this source code is governed by an MIT license
// that can be found in the LICENSE file.

pub const MAX_INT8: i8 = 127;
pub const MIN_INT8: i8 = -128;
pub const MAX_INT16: i16 = 32767;
pub const MIN_INT16: i16 = -32768;
pub const MAX_INT32: i32 = 2147483647;
pub const MIN_INT32: i32 = -2147483648;
pub const MAX_INT64: i64 = 9223372036854775807;
pub const MIN_INT64: i64 = -9223372036854775808;

pub const MAX_UINT8: u8 = 255;
pub const MAX_UINT16: u16 = 65535;
pub const MAX_UINT32: u32 = 4294967295;
pub const MAX_UINT64: u64 = 18446744073709551615;

extend u8 {
    /// Calculates length to read from the first byte.
	pub fn len_utf8(self) i32 {
		return as((as(0xE5000000, u64) >> ((self >> 3) & 0x1E) & 3) + 1, i32);
	}
}
