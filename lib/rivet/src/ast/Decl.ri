// Copyright (C) 2023 The Rivet Developers. All rights reserved.
// Use of this source code is governed by an MIT license that can
// be found in the LICENSE file.

import std/strings;

import ../token;

public enum Decl {
    Empty: token.Pos,
    DocComment {
        mut lines: []string;
        pos: token.Pos;

        [inline]
        func is_empty(self) bool {
            return self.lines.is_empty();
        }

        func merge(self) string {
            mut res := strings.Builder.new();
            for line in self.lines {
                res.write_join([line, if line.is_empty() or line.ends_with(".") {
                    "\n"
                } else {
                    " "
                }]);
            }
            return res.to_string();
        }
    },
    Import {
        annotations: Annotations;
        is_public: bool;
        path: string;
        mut alias_name: string;
        glob: bool;
        import_list: []ImportListInfo;
        mut mod_sym: Module;
        pos: token.Pos;
    }
}

public struct ImportListInfo {
    public name: string;
    public alias_name: string;
    public pos: token.Pos;
}

public struct ImportedMod {
    public name: string;
    public full_name: string;
    public alias_name: string;
    public found: bool;
    public files: []string;
}
